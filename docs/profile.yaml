components:
  get:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/name'
        gender:
          $ref: '#/components/scheme/gender'
        email:
          $ref: '#/components/scheme/email'
        profileImg:
          $ref: '#/components/scheme/profileImg'
        introduction:
          $ref: '#/components/scheme/introduction'
        phone:
          $ref: '#/components/scheme/phone'
    demander:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "D"
              example: D
        - $ref: '#/components/get/common'
        - type: object
          properties:
            styles:
              $ref: '#/components/scheme/styles'
            hopeToSupplier:
              $ref: '#/components/scheme/hopeToSupplier'
            body:
              $ref: '#/components/scheme/body'
            skin:
              $ref: '#/components/scheme/skin'
            bodyStat:
              $ref: '#/components/scheme/bodyStat'
            clothSize:
              $ref: '#/components/scheme/clothSize'
            clothPrice:
              $ref: '#/components/scheme/clothPrice'
      required:
        - userType
    supplier:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "S"
              example: S
        - $ref: '#/components/get/common'
        - type: object
          properties:
            styles:
              $ref: '#/components/scheme/stylesGender'
            rating:
              $ref: '#/components/scheme/rating'

            reviewCount:
              $ref: '#/components/scheme/reviewCount'
            hireCount:
              $ref: '#/components/scheme/hireCount'

            price:
              $ref: '#/components/scheme/price'
            coord:
              $ref: '#/components/scheme/coord'
            account:
              $ref: '#/components/scheme/account'
            bank:
              $ref: '#/components/scheme/bank'
            accountUser:
              $ref: '#/components/scheme/accountUser'
      required:
        - userType
  getOther:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/name'
        introduction:
          $ref: '#/components/scheme/introduction'
        profileImg:
          $ref: '#/components/scheme/profileImg'
        gender:
          $ref: '#/components/scheme/gender'
    demander:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "D"
              example: D
        - $ref: '#/components/get/common'
        - type: object
          properties:
            styles:
              $ref: '#/components/scheme/styles'
            hopeToSupplier:
              $ref: '#/components/scheme/hopeToSupplier'
            body:
              $ref: '#/components/scheme/body'
            skin:
              $ref: '#/components/scheme/skin'
            bodyStat:
              $ref: '#/components/scheme/bodyStat'
            clothSize:
              $ref: '#/components/scheme/clothSize'
            clothPrice:
              $ref: '#/components/scheme/clothPrice'
            closet:
              $ref: '#/components/scheme/closet'
      required:
        - userType
    supplier:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "S"
              example: S
        - $ref: '#/components/get/common'
        - type: object
          properties:
            styles:
              $ref: '#/components/scheme/stylesGender'
            rating:
              type: number
              description: 리뷰 평점
            hireCount:
              type: number
              description: 고용된 횟수
            reviewCount:
              type: number
              description: 리뷰 개수
            careerList:
              $ref: '#/components/scheme/careerList'
            price:
              $ref: '#/components/scheme/price'
            coord:
              $ref: '#/components/scheme/coord'
      required:
        - userType
        - hireCOunt
        - reviewCount
  patch:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/name'
        email:
          $ref: '#/components/scheme/email'
        introduction:
          $ref: '#/components/scheme/introduction'
        phone:
          $ref: '#/components/scheme/phone'
    demander:
      type: object
      allOf:
        - $ref: '#/components/patch/common'
        - type: object
          properties:
            hopeToSupplier:
              $ref: '#/components/scheme/hopeToSupplier'
            body:
              $ref: '#/components/scheme/bodyId'
            skin:
              $ref: '#/components/scheme/skinId'
            bodyStat:
              $ref: '#/components/scheme/bodyStat'
            clothSize:
              $ref: '#/components/scheme/clothSize'
            clothPrice:
              $ref: '#/components/scheme/clothPrice'
    supplier:
      type: object
      allOf:
        - $ref: '#/components/patch/common'
        - type: object
          properties:
            price:
              $ref: '#/components/scheme/price'
            account:
              $ref: '#/components/scheme/account'
            bank:
              $ref: '#/components/scheme/bank'
            accountUser:
              $ref: '#/components/scheme/accountUser'
  scheme:
    name:
      type: string
      description: 이름
    gender:
      type: string
      enum: [ M, F ]
      description: 성별
    email:
      type: string
      description: 이메일
    introduction:
      type: string
      description: 자기소개
      maxLength: 100
    styles:
      type: array
      description: 사용자가 선택한 Style Type
      items:
        $ref: './swagger.yaml#/components/scheme/StyleType'
    stylesGender:
      type: object
      properties:
        male:
          $ref: './swagger.yaml#/components/scheme/StyleTypeList'
        female:
          $ref: './swagger.yaml#/components/scheme/StyleTypeList'
    profileImg:
      type: string
      description: 프로필 이미지 URL
    hopeToSupplier:
      type: string
      description: 스타일리스트에게 바라는 점
      maxLength: 500
    bodyStat:
      type: object
      description: 신체 정보
      properties:
        isPublic:
          type: boolean
          description: 공개 여부
          default: false
        height:
          type: number
          description: 키
        weight:
          type: number
          description: 몸무게
    body:
      type: object
      description: 사용자의 체형
      properties:
        id:
          type: number
        value:
          type: string
    skin:
      type: object
      description: 사용자의 피부톤
      properties:
        id:
          type: number
        value:
          type: string
    bodyId:
      type: number
      description: 체형 ID
    skinId:
      type: number
      description: 피부톤 ID
    closet:
      type: array
      description: 옷장
      maxItems: 20
      items:
        type: object
        properties:
          id:
            type: number
            description: 옷장 ID
          img:
            type: string
            description: 옷 이미지 URL
        required:
          - id
          - img
    reviewList:
      type: array
      description: 내 리뷰 목록
      maxItems: 3
      items:
        type: object
        properties:
          reviewId:
            type: number
            description: 리뷰 ID
          supplierId:
            type: number
            description: 공급자 ID
          status:
            type: number
            description: |
              리뷰의 작성 상태

              0: 미작성
              1: 완료
          img:
            type: string
            description: 리뷰 썸네일 Image URL
    careerList:
      type: array
      description: 경력 목록
      items:
        type: object
        properties:
          value:
            type: string
            description: 경력 내용
          type:
            type: number
            description: 경력 종류 (아이콘이 다르기에 추가)
    price:
      type: number
      description: 코디 가격
    account:
      type: string
      description: 계좌 번호
    bank:
      type: number
      description: 계좌 은행
    accountUser:
      type: string
      description: 계좌주 이름
    coord:
      type: array
      description: 대표 코디 목록
      maxItems: 4
      items:
        type: object
        properties:
          id:
            type: number
            description: 코디 ID
          img:
            type: string
            description: 코디 IMG URL
    phone:
      type: string
      description: 회원 전화 번호
    clothSize:
      type: object
      properties:
        topSize:
          type: number
          description: 상의 Size ID
        bottomSize:
          type: number
          description: 하의 Size ID
        shoulderSize:
          type: number
          description: 어깨 Size ID
        waistSize:
          type: number
          description: 허리 Size ID
        bellySize:
          type: number
          description: 배 Size ID
        hipSize:
          type: number
          description: 엉덩이 Size ID
    clothPrice:
      type: object
      properties:
        topPrice:
          $ref: '#/components/scheme/priceContent'
          description: 상의 선호 가격
        bottomPrice:
          $ref: '#/components/scheme/priceContent'
          description: 하의 선호 가격
        dressPrice:
          $ref: '#/components/scheme/priceContent'
          description: 원피스/세트 선호 가격
        shoesPrice:
          $ref: '#/components/scheme/priceContent'
          description: 신발 선호 가격
        bagPrice:
          $ref: '#/components/scheme/priceContent'
          description: 가방 선호 가격
        accessoryPrice:
          $ref: '#/components/scheme/priceContent'
          description: 악세서리 선호 가격
        hatPrice:
          $ref: '#/components/scheme/priceContent'
          description: 모자 선호 가격
    priceContent:
      type: object
      properties:
        min:
          type: number
        max:
          type: number
      requirement:
        - min
        - max
    rating:
      type: number
      description: 리뷰 평점
    hireCount:
      type: number
      description: 고용된 횟수
    reviewCount:
      type: number
      description: 리뷰 개수

path:
  /profile:
    get:
      summary: 내 프로필 정보 가져오기
      description: 내 프로필 정보를 가져옵니다. 스타일 리스트와 일반 사용자의 Response가 다릅니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/get/demander'
                  - $ref: '#/components/get/supplier'
        '204':
          description: 반환 할 데이터가 없음. 온보딩 처리를 하지 않은 userType='N' 인 사용자의 경우에 발생합니다.
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
    patch:
      summary: 내 프로필 정보 수정
      description: 내 프로필 정보를 수정합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/patch/demander'
                - $ref: '#/components/patch/supplier'
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
        '403':
          description: 권한이 없음. 온보딩 처리를 하지 않은 userType='N' 인 사용자의 경우에 발생합니다.
  /profile/{userId}:
    get:
      summary: 프로필 정보 가져오기 (타인)
      description: |
        프로필 정보를 가져옵니다. 스타일 리스트와 일반 사용자의 Response가 다릅니다.

        미리보기나 남의 프로필 정보를 볼 때 사용할 수 있습니다.
      tags: [ Profile ]
      parameters:
        - name: userId
          in: 'path'
          description: 열람하고자 하는 Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/getOther/demander'
                  - $ref: '#/components/getOther/supplier'

  /profile/{userId}/lookbook:
    get:
      summary: 코디 룩북 리스트
      description: |
        코디 룩북 목록을 가져옵니다.

        id를 생략시 자기 자신의 룩북을 가져옵니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: userId
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 룩북 ID
                        img:
                          type: string
                          description: Img URL

  /profile/{userId}/review:
    get:
      summary: 코디 리뷰 리스트
      description: |
        코디 공급자가 받은 리뷰 목록을 보여줍니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: userId
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rating:
                    type: number
                    description: 평균 평점, 리뷰가 한개도 없을 경우 주어지지 않음
                  totalCount:
                    type: number
                    description: 전체 리뷰 개수
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: Review ID
                        name:
                          type: string
                          description: 리뷰 작성자 이름
                        profileImg:
                          type: sting
                          description: Profile Img URL
                        coordImg:
                          type: array
                          description: 코디 받은 이미지 URL List
                          items:
                            type: string
                        img:
                          type: array
                          description: 리뷰에 등록한 이미지 URL List
                          items:
                            type: string
                        rating:
                          $ref: 'review.yaml#/components/scheme/rating'
                        content:
                          $ref: 'review.yaml#/components/scheme/content'
                        date:
                          type: string
                          example: 2021.01.01
                          description: 리뷰 날짜
                        height:
                          type: number
                          description: 리뷰 작성자의 키 (체형 비공개 시 생략)
                        wieght:
                          type: number
                          description: 리뷰 작성자의 몸무게 (체형 비공개 시 생략)
                        body:
                          $ref: '#/components/scheme/body'
                        styleTypeList:
                          $ref: './swagger.yaml#/components/scheme/StyleTypeList'
                      required:
                        - id
                        - img
                        - rating
                        - content
                        - date
                        - body
                        - styleTypeList
                required:
                  - list
                  - totalCount
  /profile/img:
    post:
      summary: 프로필 이미지 변경하기
      description: 프로필 이미지를 변경합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
    delete:
      summary: 프로필 이미지 삭제하기
      description: 프로필 이미지를 삭제합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/lookbook:
    post:
      summary: 코디 기록 추가하기
      description: 코디 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
                represent:
                  type: boolean
              required:
                - img
                - represent
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'


  /profile/lookbook/{lookbookId}:
    delete:
      summary: 룩북 삭제하기
      description: 사용자의 룩북을 삭제합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      parameters:
        - name: lookbookId
          in: 'path'
          description: 삭제하고자 하는 lookbook Id
          schema:
            type: number
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
        '403':
          description: 해당 이미지에 권한 없음

  /profile/{userId}/closet:
    get:
      summary: 옷장 보기
      description: 사용자의 옷장에 이미지를 추가합니다.

        id를 생략시 자기 자신의 룩북을 가져옵니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: userId
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        img:
                          type: string
  /profile/closet:
    post:
      summary: 내 옷장 추가하기
      description: 내 옷장에 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/closet/{closetId}:
    delete:
      summary: 옷장 하나 삭제하기
      description: 사용자의 옷장에 있는 이미지를 삭제합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      parameters:
        - name: closetId
          in: 'path'
          description: 삭제하고자 하는 Closet Id
          schema:
            type: number
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
        '403':
          description: 해당 이미지에 권한 없음

  /profile/body:
    get:
      summary: 체형 목록 불러오기
      description: 성별에 맞춰 체형 목록을 불러옵니다.
      tags: [ Profile ]
      parameters:
        - name: gender
          in: 'query'
          description: 열람하고자 하는 demanderId
          enum: [ M, F ]
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        value:
                          type: string
                        img:
                          type: string
