components:
  get:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/common/name'
        introduction:
          $ref: '#/components/scheme/common/introduction'
        styles:
          $ref: '#/components/scheme/common/styles'
        profileImg:
          $ref: '#/components/scheme/common/profileImg'
    demander:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "D"
              example: D
        - $ref: '#/components/get/common'
        - type: object
          properties:
            hopeToSupplier:
              $ref: '#/components/scheme/demander/hopeToSupplier'
            bodyStat:
              $ref: '#/components/scheme/demander/bodyStat'
            closet:
              $ref: '#/components/scheme/demander/closet'
            reviewList:
              $ref: '#/components/scheme/demander/reviewList'
      required:
        - userType
    supplier:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "S"
              example: S
        - $ref: '#/components/get/common'
        - type: object
          properties:
            careerList:
              $ref: '#/components/scheme/supplier/careerList'
            price:
              $ref: '#/components/scheme/supplier/price'
            coord:
              $ref: '#/components/scheme/supplier/coord'
      required:
        - userType
  getOther:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/common/name'
        introduction:
          $ref: '#/components/scheme/common/introduction'
        styles:
          $ref: '#/components/scheme/common/styles'
        profileImg:
          $ref: '#/components/scheme/common/profileImg'
    demander:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "D"
              example: D
        - $ref: '#/components/get/common'
        - type: object
          properties:
            hopeToSupplier:
              $ref: '#/components/scheme/demander/hopeToSupplier'
            bodyStat:
              $ref: '#/components/scheme/demander/bodyStat+'
            closet:
              $ref: '#/components/scheme/demander/closet'
      required:
        - userType
    supplier:
      type: object
      allOf:
        - type: object
          properties:
            userType:
              type: string
              description: 유저 타입 "S"
              example: S
        - $ref: '#/components/get/common'
        - type: object
          properties:
            rating:
              type: number
              description: 리뷰 평점
            hireCount:
              type: number
              description: 고용된 횟수
            reviewCount:
              type: number
              description: 리뷰 개수
            careerList:
              $ref: '#/components/scheme/supplier/careerList'
            price:
              $ref: '#/components/scheme/supplier/price'
            coord:
              $ref: '#/components/scheme/supplier/coord'
      required:
        - userType
        - hireCOunt
        - reviewCount
  patch:
    common:
      type: object
      properties:
        name:
          $ref: '#/components/scheme/common/name'
        introduction:
          $ref: '#/components/scheme/common/introduction'
    demander:
      type: object
      allOf:
        - $ref: '#/components/patch/common'
        - type: object
          properties:
            hopeToSupplier:
              $ref: '#/components/scheme/demander/hopeToSupplier'
            bodyStat:
              $ref: '#/components/scheme/demander/bodyStat'
    supplier:
      type: object
      allOf:
        - $ref: '#/components/patch/common'
        - type: object
          properties:
            careerList:
              $ref: '#/components/scheme/supplier/careerList'
            price:
              $ref: '#/components/scheme/supplier/price'
  scheme:
    common:
      name:
        type: string
        description: 이름
      introduction:
        type: string
        description: 자기소개
        maxLength: 100
      styles:
        type: array
        description: 사용자가 선택한 Style Type
        items:
          type: string
      profileImg:
        type: string
        description: 프로필 이미지 URL
    demander:
      hopeToSupplier:
        type: string
        description: 스타일리스트에게 바라는 점
        maxLength: 500
      bodyStat:
        type: object
        description: 신체 정보
        properties:
          isPublic:
            type: boolean
            description: 공개 여부
            default: false
          height:
            type: number
            description: 키
          weight:
            type: number
            description: 몸무게
      bodyStat+:
        type: object
        description: 신체 정보
        allOf:
          - type: object
            properties:
              body:
                $ref: '#/components/scheme/demander/body'
          - $ref: '#/components/scheme/demander/bodyStat'
      body:
        type: object
        description: 사용자의 체형
        properties:
          id:
            type: number
          value:
            type: string
      closet:
        type: array
        description: 옷장
        maxItems: 20
        items:
          type: object
          properties:
            id:
              type: number
              description: 옷장 ID
            img:
              type: string
              description: 옷 이미지 URL
          required:
            - id
            - img
      reviewList:
        type: array
        description: 내 리뷰 목록
        maxItems: 3
        items:
          type: object
          properties:
            id:
              type: number
              description: 리뷰 ID
            status:
              type: number
              description: |
                리뷰의 작성 상태

                0: 미작성
                1: 완료
            img:
              type: string
              description: 리뷰 썸네일 Image URL
    supplier:
      careerList:
        type: array
        description: 경력 목록
        items:
          type: object
          properties:
            value:
              type: string
              description: 경력 내용
            type:
              type: number
              description: 경력 종류 (아이콘이 다르기에 추가)
      price:
        type: number
        description: 코디 가격

      coord:
        type: array
        description: 대표 코디 목록, Image Url Array
        maxItems: 4
        items:
          type: string

path:
  /profile:
    get:
      summary: 내 프로필 정보 가져오기
      description: 내 프로필 정보를 가져옵니다. 스타일 리스트와 일반 사용자의 Response가 다릅니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/get/demander'
                  - $ref: '#/components/get/supplier'
        '204':
          description: 반환 할 데이터가 없음. 온보딩 처리를 하지 않은 userType='N' 인 사용자의 경우에 발생합니다.
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
    patch:
      summary: 내 프로필 정보 수정
      description: 내 프로필 정보를 수정합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/patch/demander'
                - $ref: '#/components/patch/supplier'
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
        '403':
          description: 권한이 없음. 온보딩 처리를 하지 않은 userType='N' 인 사용자의 경우에 발생합니다.
  /profile/{id}:
    get:
      summary: 프로필 정보 가져오기 (타인)
      description: |
        프로필 정보를 가져옵니다. 스타일 리스트와 일반 사용자의 Response가 다릅니다.

        미리보기나 남의 프로필 정보를 볼 때 사용할 수 있습니다.
      tags: [ Profile ]
      parameters:
        - name: id
          in: 'path'
          description: 열람하고자 하는 Id
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/getOther/demander'
                  - $ref: '#/components/getOther/supplier'

  /profile/{id}/lookbook:
    get:
      summary: 코디 룩북 리스트
      description: |
        코디 룩북 목록을 가져옵니다.

        id를 생략시 자기 자신의 룩북을 가져옵니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: id
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 룩북 ID
                        img:
                          type: string
                          description: Img URL

  /profile/{id}/review:
    get:
      summary: 코디 리뷰 리스트
      description: |
        코디 공급자가 받은 리뷰 목록을 보여줍니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: id
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rating:
                    type: number
                    description: 평균 평점, 리뷰가 한개도 없을 경우 주어지지 않음
                  totalCount:
                    type: number
                    description: 전체 리뷰 개수
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: Review ID
                        name:
                          type: string
                          description: 리뷰 작성자 이름
                        profileImg:
                          type: sting
                          description: Profile Img URL
                        img:
                          type: array
                          description: Img URL List, 첫 인덱스는 무조건 코디 사진.
                          items:
                            type: string
                        rating:
                          $ref: 'review.yaml#/components/scheme/rating'
                        content:
                          $ref: 'review.yaml#/components/scheme/content'
                        date:
                          type: string
                          example: 2021.01.01
                          description: 리뷰 날짜
                        height:
                          type: number
                          description: 리뷰 작성자의 키 (체형 비공개 시 생략)
                        wieght:
                          type: number
                          description: 리뷰 작성자의 몸무게 (체형 비공개 시 생략)
                        body:
                          $ref: '#/components/scheme/demander/body'
                        styleTypeList:
                          $ref: './swagger.yaml#/components/scheme/StyleTypeList'
                      required:
                        - id
                        - img
                        - rating
                        - content
                        - date
                        - body
                        - styleTypeList
                required:
                  - list
                  - totalCount
  /profile/img:
    post:
      summary: 프로필 이미지 변경하기
      description: 프로필 이미지를 변경합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/lookbook:
    post:
      summary: 코디 기록 추가하기
      description: 코디 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
                represent:
                  type: boolean
              required:
                - img
                - represent
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/closet:
    post:
      summary: 내 옷장 추가하기
      description: 내 옷장에 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'