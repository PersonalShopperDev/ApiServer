components:
  get:
    demander:
      type: object
      allOf:
        - $ref: '#/components/scheme/common'
        - $ref: '#/components/scheme/commonNotEdit'
        - $ref: '#/components/scheme/demanderEdit'
        - $ref: '#/components/scheme/demanderNotEdit'
    supplier:
      type: object
      allOf:
        - $ref: '#/components/scheme/common'
        - $ref: '#/components/scheme/commonNotEdit'
        - $ref: '#/components/scheme/supplierEdit'
        - $ref: '#/components/scheme/supplierNotEdit'
  patch:
    demander:
      type: object
      allOf:
        - $ref: '#/components/scheme/common'
        - $ref: '#/components/scheme/demanderEdit'
    supplier:
      type: object
      allOf:
        - $ref: '#/components/scheme/common'
        - $ref: '#/components/scheme/supplierEdit'
  scheme:
    common:
      type: object
      properties:
        name:
          type: string
          description: 이름
        introduction:
          type: string
          description: 자기소개
          maxLength: 100

    commonNotEdit:
      type: object
      properties:
        styles:
          type: array
          description: 사용자가 선택한 Style Type
          items:
            type: string
        profileImg:
          type: string
          description: 프로필 이미지 URL

    demanderEdit:
      type: object
      properties:
        hopeToSupplier:
          type: string
          description: 스타일리스트에게 바라는 점
          maxLength: 500
        bodyStat:
          type: object
          description: 신체 정보
          properties:
            isPublic:
              type: boolean
              description: 공개 여부
              default: false
            height:
              type: number
              description: 키
            weight:
              type: number
              description: 몸무게

    demanderNotEdit:
      type: object
      properties:
        closet:
          type: array
          description: 옷장
          maxItems: 20
          items:
            type: object
            properties:
              id:
                type: number
                description: 옷장 ID
              img:
                type: string
                description: 옷 이미지 URL
            required:
              - id
              - img
        reviewList:
          type: array
          description: 내 리뷰 목록
          maxItems: 3
          items:
            type: object
            properties:
              id:
                type: number
                description: 리뷰 ID
              status:
                type: number
                description: |
                  리뷰의 작성 상태

                  0: 미작성
                  1: 완료
              img:
                type: string
                description: 리뷰 썸네일 Image URL

    supplierEdit:
      type: object
      properties:
        careerList:
          type: array
          description: 경력 목록
          items:
            type: object
            properties:
              value:
                type: string
                description: 경력 내용
              type:
                type: number
                description: 경력 종류 (아이콘이 다르기에 추가)
        price:
          type: number
          description: 코디 가격
    supplierNotEdit:
      type: object
      properties:
        coord:
          type: array
          description: 대표 코디 목록, Image Url Array
          maxItems: 4
          items:
            type: string

path:
  /profile:
    get:
      summary: 프로필 정보 가져오기
      description: 프로필 정보를 가져옵니다. 스타일 리스트와 일반 사용자의 Response가 다릅니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - allOf:
                      - type: object
                        properties:
                          userType:
                            type: string
                            description: 유저 타입 "D"
                            example: D
                        required:
                          - demanderType
                      - $ref: '#/components/get/demander'
                  - allOf:
                      - type: object
                        properties:
                          userType:
                            type: string
                            description: 유저 타입 "S"
                            example: S
                        required:
                          - demanderType
                      - $ref: '#/components/get/supplier'
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'
    patch:
      summary: 프로필 정보 수정
      description: 프로필 정보를 수정합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/patch/demander'
                - $ref: '#/components/patch/supplier'
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/{id}/lookbook:
    get:
      summary: 코디 룩북 리스트
      description: |
        코디 룩북 목록을 가져옵니다.

        id를 생략시 자기 자신의 룩북을 가져옵니다.

        paging 처리가 되어 있습니다.
      tags: [ Profile ]
      parameters:
        - name: id
          in: 'path'
          description: 열람하고자 하는 supplier Id
          schema:
            type: number
        - $ref: './swagger.yaml#/components/Request/page'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: 룩북 ID
                        img:
                          type: string
                          description: Img URL

  /profile/img:
    post:
      summary: 프로필 이미지 변경하기
      description: 프로필 이미지를 변경합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/lookbook:
    post:
      summary: 코디 기록 추가하기
      description: 코디 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
                represent:
                  type: boolean
              required:
                - img
                - represent
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'

  /profile/closet:
    post:
      summary: 내 옷장 추가하기
      description: 내 옷장에 이미지를 추가합니다.
      tags: [ Profile ]
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                img:
                  type: binary
                represent:
                  type: boolean
              required:
                - img
      responses:
        '200':
          description: OK
        '401':
          $ref: './swagger.yaml#/components/Errors/UnauthorizedError'